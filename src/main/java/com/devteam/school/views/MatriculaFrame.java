package com.devteam.school.views;

import com.devteam.school.app.AppContext;
import com.devteam.school.app.Utils;
import com.devteam.school.controllers.MatriculaController;
import com.devteam.school.model.entities.*;

import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;


public class MatriculaFrame extends javax.swing.JFrame implements TransferData{

    private static  MatriculaFrame matriculaFrame;
    
    private final MatriculaController matriculaController;
    
    private Alumno alumnoMatricula;  // Alumno del matricula


    public static MatriculaFrame getInstance(){
        if (matriculaFrame == null){
            matriculaFrame = new MatriculaFrame();
        }else
            matriculaFrame.restart();
        return matriculaFrame;
    }

    private void restart() { 
        resetForm();
    }


    private MatriculaFrame() {
        initComponents();        
        
        matriculaController = (MatriculaController) AppContext.getAppContext().getBean("matriculaController");
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jtfAlumno = new javax.swing.JTextField();
        jbMatricular = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtfId = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jbElegirAlumno = new javax.swing.JButton();
        jcbGrado = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jbNuevaMatricula = new javax.swing.JButton();
        jlTitulo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtCursos = new javax.swing.JTable();
        jbActualizarTabla = new javax.swing.JButton();
        jlTotalRegistros = new javax.swing.JLabel();
        jlCursosJalados = new javax.swing.JLabel();

        jLabel2.setText("Nombre:");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("DATOS DE MATRÍCULA"));

        jtfAlumno.setEditable(false);

        jbMatricular.setBackground(new java.awt.Color(51, 51, 51));
        jbMatricular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/database_save.png"))); // NOI18N
        jbMatricular.setText("Matricular");
        jbMatricular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMatricularActionPerformed(evt);
            }
        });

        jLabel3.setText("Grado:");

        jtfId.setEditable(false);
        jtfId.setEnabled(false);

        jLabel12.setText("Código:");

        jLabel1.setText("Alumno:");

        jbElegirAlumno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/application_view_list.png"))); // NOI18N
        jbElegirAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbElegirAlumnoMouseReleased(evt);
            }
        });

        jcbGrado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1º", "2º", "3º", "4º", "5º" }));

        jLabel4.setBackground(new java.awt.Color(255, 179, 0));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ballon.png"))); // NOI18N
        jLabel4.setText("Asegúrece de elegir correctamente los datos.");
        jLabel4.setOpaque(true);

        jbNuevaMatricula.setText("Nuevo");
        jbNuevaMatricula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbNuevaMatriculaMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfId, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfAlumno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbElegirAlumno))
                            .addComponent(jcbGrado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jbNuevaMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbMatricular, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jtfAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbElegirAlumno)
                    .addComponent(jLabel1))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jcbGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbMatricular)
                    .addComponent(jbNuevaMatricula))
                .addContainerGap())
        );

        jlTitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTitulo.setText("MATRÍCULA DE ALUMNOS");
        jlTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("NOTAS ANTERIORES"));

        jtCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jtCursos);

        jbActualizarTabla.setBackground(new java.awt.Color(51, 51, 51));
        jbActualizarTabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        jbActualizarTabla.setText("Actualizar");
        jbActualizarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarTablaActionPerformed(evt);
            }
        });

        jlTotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlTotalRegistros.setText("Registros");

        jlCursosJalados.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbActualizarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jlTotalRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlCursosJalados, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jbActualizarTabla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTotalRegistros)
                    .addComponent(jlCursosJalados))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jlTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        
    public void fillTable(List<MatriculaDetalle> mdetalles){
        String[] titles = {"ID", "Curso", "Grado","Promedio","Profesor"};
        DefaultTableModel model = new DefaultTableModel(null, titles);

        String[] row = new String[5];
        
        int jalados = 0;
                
        for (MatriculaDetalle mdetalle : mdetalles){
            row[0] = String.valueOf( mdetalle.getId() );
            row[1] = mdetalle.getCursoNombre();
            row[2] = mdetalle.getGrado() + "º";
            
            row[3] = mdetalle.getPromedio() + "";
            row[4] = mdetalle.getProfesorNombre();

            if(mdetalle.getPromedio() < 11) jalados++;
            
            model.addRow(row);
        }

        jtCursos.setModel(model);
        jlTotalRegistros.setText( mdetalles.size() + " Cursos");
        jlCursosJalados.setText(jalados + " Jalados");
    }
    
    private void jbActualizarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarTablaActionPerformed
        // TODO add your handling code here:
        updateTable();
    }//GEN-LAST:event_jbActualizarTablaActionPerformed

    private void jbMatricularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMatricularActionPerformed

        int grado = jcbGrado.getSelectedIndex() + 1;
        String id = jtfId.getText();

        Matricula matricula = new Matricula();
        matricula.setId( id.isEmpty()? 0 : Integer.parseInt(id) );
        matricula.setAnio(Utils.currentYear());
        matricula.setGrado(grado);
        if (alumnoMatricula != null) matricula.setAlumnoId(alumnoMatricula.getId());

        if (alumnoMatricula != null){
            Matricula temp = matriculaController.checkMatricula(matricula);
            if (temp != null){
                fillMatriculaForm(temp);
                Utils.showInfoMessage(rootPane, "El alumno ya registra  matrícula este año");
                jbMatricular.setText("Actualizar");
                return;
            }
        }

        if (matricula.getId() == 0) {  // save
            matricula = matriculaController.saveMatricula(matricula);
            if (matricula != null ) {
                fillMatriculaForm(matricula);
                JOptionPane.showMessageDialog(rootPane, "La matrícula fue registrado correctamente");
                jbMatricular.setText("Actualizar");
            }
        }else{  // update
            matricula = matriculaController.updateMatricula(matricula);
            if (matricula != null ) {
                JOptionPane.showMessageDialog(rootPane, "La matrícula fue actualizado correctamente");
            }
        }
        
    }//GEN-LAST:event_jbMatricularActionPerformed

    private void  fillMatriculaForm(Matricula matricula){
        jtfId.setText(String.valueOf(matricula.getId()));
        jcbGrado.setSelectedIndex(matricula.getGrado() - 1);
    
    }
    
    private void jbElegirAlumnoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbElegirAlumnoMouseReleased
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                AlumnoChooserDialog dialog = new AlumnoChooserDialog( matriculaFrame, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.dispose();
                    }
                });
                dialog.setTransfer(matriculaFrame);
                
                dialog.setVisible(true);  // Si lo llamas antes, no funciona
            }
        });
    }//GEN-LAST:event_jbElegirAlumnoMouseReleased

    private void jbNuevaMatriculaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbNuevaMatriculaMouseReleased
        // TODO add your handling code here:
        resetForm();
    }//GEN-LAST:event_jbNuevaMatriculaMouseReleased
    
    private void resetForm(){
        alumnoMatricula = null;
        jtfAlumno.setText("");
        jtfId.setText("");
        jbMatricular.setText("Matricular");
        jcbGrado.setSelectedIndex(0);
        //jbMatricular.setEnabled(false);
        jtCursos.setModel(new DefaultTableModel());
    }
    
    private void updateTable(Alumno alumno){
        if( alumnoMatricula == null || alumno.getId() != alumnoMatricula.getId()){
            alumnoMatricula = alumno;
            List<MatriculaDetalle> detalles = matriculaController.getPreviousAcademicBackground(alumnoMatricula.getId());
            fillTable(detalles);
        }
        
    }
    
    private void updateTable(){
        if( alumnoMatricula != null ){
            List<MatriculaDetalle> detalles = matriculaController.getPreviousAcademicBackground(alumnoMatricula.getId());
            fillTable(detalles);
        }
        
    }
    
    @Override
    public void transfer(Object data) {
        Alumno alumno = (Alumno)data;
        jtfAlumno.setText(alumno.getNombre() + " " + alumno.getApellidos());
        
        updateTable(alumno);
        //jtfId.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbActualizarTabla;
    private javax.swing.JButton jbElegirAlumno;
    private javax.swing.JButton jbMatricular;
    private javax.swing.JButton jbNuevaMatricula;
    private javax.swing.JComboBox<String> jcbGrado;
    private javax.swing.JLabel jlCursosJalados;
    private javax.swing.JLabel jlTitulo;
    private javax.swing.JLabel jlTotalRegistros;
    private javax.swing.JTable jtCursos;
    private javax.swing.JTextField jtfAlumno;
    private javax.swing.JTextField jtfId;
    // End of variables declaration//GEN-END:variables
   
}
